{
  "x-generator": "NSwag v13.16.0.0 (NJsonSchema v10.7.1.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "ArchitectureSolutions API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/File": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_CreateFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/IHeaderDictionary"
                      }
                    ]
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_GetTodoItemsWithPagination",
        "parameters": [
          {
            "name": "ListId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTodoItemBriefDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "patchTodoItem",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTodoItemDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoItems/{id}/JsonPatch": {
      "patch": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_JsonPatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "patchDoc",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoItems/UpdateItemDetails": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_UpdateItemDetails",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/TodoLists/{id}": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IHeaderDictionary": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Item": {
            "type": "array",
            "items": {}
          },
          "ContentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Accept": {
            "type": "array",
            "items": {}
          },
          "AcceptCharset": {
            "type": "array",
            "items": {}
          },
          "AcceptEncoding": {
            "type": "array",
            "items": {}
          },
          "AcceptLanguage": {
            "type": "array",
            "items": {}
          },
          "AcceptRanges": {
            "type": "array",
            "items": {}
          },
          "AccessControlAllowCredentials": {
            "type": "array",
            "items": {}
          },
          "AccessControlAllowHeaders": {
            "type": "array",
            "items": {}
          },
          "AccessControlAllowMethods": {
            "type": "array",
            "items": {}
          },
          "AccessControlAllowOrigin": {
            "type": "array",
            "items": {}
          },
          "AccessControlExposeHeaders": {
            "type": "array",
            "items": {}
          },
          "AccessControlMaxAge": {
            "type": "array",
            "items": {}
          },
          "AccessControlRequestHeaders": {
            "type": "array",
            "items": {}
          },
          "AccessControlRequestMethod": {
            "type": "array",
            "items": {}
          },
          "Age": {
            "type": "array",
            "items": {}
          },
          "Allow": {
            "type": "array",
            "items": {}
          },
          "AltSvc": {
            "type": "array",
            "items": {}
          },
          "Authorization": {
            "type": "array",
            "items": {}
          },
          "Baggage": {
            "type": "array",
            "items": {}
          },
          "CacheControl": {
            "type": "array",
            "items": {}
          },
          "Connection": {
            "type": "array",
            "items": {}
          },
          "ContentDisposition": {
            "type": "array",
            "items": {}
          },
          "ContentEncoding": {
            "type": "array",
            "items": {}
          },
          "ContentLanguage": {
            "type": "array",
            "items": {}
          },
          "ContentLocation": {
            "type": "array",
            "items": {}
          },
          "ContentMD5": {
            "type": "array",
            "items": {}
          },
          "ContentRange": {
            "type": "array",
            "items": {}
          },
          "ContentSecurityPolicy": {
            "type": "array",
            "items": {}
          },
          "ContentSecurityPolicyReportOnly": {
            "type": "array",
            "items": {}
          },
          "ContentType": {
            "type": "array",
            "items": {}
          },
          "CorrelationContext": {
            "type": "array",
            "items": {}
          },
          "Cookie": {
            "type": "array",
            "items": {}
          },
          "Date": {
            "type": "array",
            "items": {}
          },
          "ETag": {
            "type": "array",
            "items": {}
          },
          "Expires": {
            "type": "array",
            "items": {}
          },
          "Expect": {
            "type": "array",
            "items": {}
          },
          "From": {
            "type": "array",
            "items": {}
          },
          "GrpcAcceptEncoding": {
            "type": "array",
            "items": {}
          },
          "GrpcEncoding": {
            "type": "array",
            "items": {}
          },
          "GrpcMessage": {
            "type": "array",
            "items": {}
          },
          "GrpcStatus": {
            "type": "array",
            "items": {}
          },
          "GrpcTimeout": {
            "type": "array",
            "items": {}
          },
          "Host": {
            "type": "array",
            "items": {}
          },
          "KeepAlive": {
            "type": "array",
            "items": {}
          },
          "IfMatch": {
            "type": "array",
            "items": {}
          },
          "IfModifiedSince": {
            "type": "array",
            "items": {}
          },
          "IfNoneMatch": {
            "type": "array",
            "items": {}
          },
          "IfRange": {
            "type": "array",
            "items": {}
          },
          "IfUnmodifiedSince": {
            "type": "array",
            "items": {}
          },
          "LastModified": {
            "type": "array",
            "items": {}
          },
          "Link": {
            "type": "array",
            "items": {}
          },
          "Location": {
            "type": "array",
            "items": {}
          },
          "MaxForwards": {
            "type": "array",
            "items": {}
          },
          "Origin": {
            "type": "array",
            "items": {}
          },
          "Pragma": {
            "type": "array",
            "items": {}
          },
          "ProxyAuthenticate": {
            "type": "array",
            "items": {}
          },
          "ProxyAuthorization": {
            "type": "array",
            "items": {}
          },
          "ProxyConnection": {
            "type": "array",
            "items": {}
          },
          "Range": {
            "type": "array",
            "items": {}
          },
          "Referer": {
            "type": "array",
            "items": {}
          },
          "RetryAfter": {
            "type": "array",
            "items": {}
          },
          "RequestId": {
            "type": "array",
            "items": {}
          },
          "SecWebSocketAccept": {
            "type": "array",
            "items": {}
          },
          "SecWebSocketKey": {
            "type": "array",
            "items": {}
          },
          "SecWebSocketProtocol": {
            "type": "array",
            "items": {}
          },
          "SecWebSocketVersion": {
            "type": "array",
            "items": {}
          },
          "SecWebSocketExtensions": {
            "type": "array",
            "items": {}
          },
          "Server": {
            "type": "array",
            "items": {}
          },
          "SetCookie": {
            "type": "array",
            "items": {}
          },
          "StrictTransportSecurity": {
            "type": "array",
            "items": {}
          },
          "TE": {
            "type": "array",
            "items": {}
          },
          "Trailer": {
            "type": "array",
            "items": {}
          },
          "TransferEncoding": {
            "type": "array",
            "items": {}
          },
          "Translate": {
            "type": "array",
            "items": {}
          },
          "TraceParent": {
            "type": "array",
            "items": {}
          },
          "TraceState": {
            "type": "array",
            "items": {}
          },
          "Upgrade": {
            "type": "array",
            "items": {}
          },
          "UpgradeInsecureRequests": {
            "type": "array",
            "items": {}
          },
          "UserAgent": {
            "type": "array",
            "items": {}
          },
          "Vary": {
            "type": "array",
            "items": {}
          },
          "Via": {
            "type": "array",
            "items": {}
          },
          "Warning": {
            "type": "array",
            "items": {}
          },
          "WebSocketSubProtocols": {
            "type": "array",
            "items": {}
          },
          "WWWAuthenticate": {
            "type": "array",
            "items": {}
          },
          "XContentTypeOptions": {
            "type": "array",
            "items": {}
          },
          "XFrameOptions": {
            "type": "array",
            "items": {}
          },
          "XPoweredBy": {
            "type": "array",
            "items": {}
          },
          "XRequestedWith": {
            "type": "array",
            "items": {}
          },
          "XUACompatible": {
            "type": "array",
            "items": {}
          },
          "XXSSProtection": {
            "type": "array",
            "items": {}
          }
        }
      },
      "PaginatedListOfTodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemBriefDto"
            }
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int32"
          },
          "HasPreviousPage": {
            "type": "boolean"
          },
          "HasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TodoItemBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Done": {
            "type": "boolean"
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Done": {
            "type": "boolean"
          }
        }
      },
      "Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "nullable": true
              }
            }
          }
        ]
      },
      "OperationBase": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchTodoItemDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDtoBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Title": {
                "type": "string",
                "nullable": true
              },
              "Done": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "PatchDtoBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "Priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Colour": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ListId": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Done": {
            "type": "boolean"
          },
          "Priority": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Date": {
            "type": "string",
            "format": "date-time"
          },
          "TemperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "TemperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "Summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}